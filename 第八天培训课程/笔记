try/except:
except用法：
1.不写异常的类型表示捕获所有异常--except:
2.可以一次捕获多种异常(exception 1,exception2)
3.多个except不要求从小到大捕获
	except Exception:
		pass
	except NameError:
		pass
4.可以在except添加else语句，没有异常会执行else语句
5.捕获异常时可以声明变量e，表示一个异常的实例
	except NameError as e: #生成异常的实例e
		print(e)
6.如果捕获了异常，不会打印堆栈信息，
    如果想要输出详细的堆栈信息，要使用 traceback库
    -----------
finally:不管try except是否出错，都会执行finally中的语句
-------
自定义异常：
通过用户自己创建一个新的exception类来指定自己的异常
异常都应该继承自Exception类，直接继承或者间接继承
---------------------------------------------
面向对象:考虑事情以对象为重点，在任何操作上都建立在对象的基础上
		学类的属性和方法
面向过程:考虑事情以每一步做什么为重点
面向对象中的关键字:
1.类：用来描述具有相同的属性和方法的对象的集合，是脑海中的抽象概念。
	 它定义了该集合中每个对象所具有的属性和方法。
2.实例化：创建一个类的实例，这个实例是类的具体对象。
3.对象：通过类定义的数据结构的实例，包含两个数据成员(类变量和实例变量)和方法。
4.类变量：类变量在所有实例化的对象中共有，类变量是归类所有，通过类名访问。
5.实例变量(属性)：在类的声明中，属性是用变量来表示的。
6.方法：类中定义的函数，是类的行为。
命名方法：
1.驼峰式命名法(小驼峰):首单词的首字母小写，后续每个单词的首字母都大写
		userName  userPsw   
一般用来命名对象名、属性、方法
2.帕斯卡命名法(大驼峰):每个单词的首字母都大写
		Person  BookSystem  StudentManger
一般用来命名类名、文件名、项目名
3.匈牙利命名法：多个单词组成，每个单词都小写，中间用下划线分割
	   student_school_address
	   可以直观的看出命名对象的相关信息
一般用于数据库中的命名：  seq_user_id    .nextval

布尔类型的命名方法: isXXX  isBoy  isStudent isRain
因为布尔类型的值只有True和False   a = True  isRain=False


		
